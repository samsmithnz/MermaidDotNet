name: CI/CD
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
  build:
    name: Build job
    runs-on: ubuntu-latest
    outputs:
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.1
      with:
        versionSpec: 5.x
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3.1.1
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: .NET test
      run: dotnet test src/MermaidDotNet.Tests/MermaidDotNet.Tests.csproj -c Release
    #- name: .NET publish
    #  run: dotnet publish src/MermaidDotNet/MermaidDotNet.csproj -c Release -p:Version='${{ steps.gitversion.outputs.SemVer }}'
    - name: .NET pack
      run: dotnet pack src/MermaidDotNet/MermaidDotNet.csproj -c Release --nologo -p:Version='${{ steps.gitversion.outputs.SemVer }}'
    - name: Upload package back to GitHub
      uses: actions/upload-artifact@v4
      with:
        name: drop
        path: src/MermaidDotNet/bin/Release
        
        
  sonarCloud:
    name: Run SonarCloud analysis
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' 
    steps:
      - name: Run Sonarcloud test
        uses: samsmithnz/SamsDotNetSonarCloudAction@v2
        with:
          projects: 'src/MermaidDotNet/MermaidDotNet.csproj,src/MermaidDotNet.Tests/MermaidDotNet.Tests.csproj'
          dotnet-version: '8.0.x'
          sonarcloud-organization: samsmithnz-github
          sonarcloud-project: samsmithnz_MermaidDotNet
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


  Release:
    runs-on: ubuntu-latest
    needs: 
    - build
    - sonarCloud
    if: github.ref == 'refs/heads/main'      
    steps:
    - name: Display GitVersion outputs
      run: |
        echo "Version: ${{ needs.build.outputs.Version }}" 
        echo "CommitsSinceVersionSource: ${{ needs.build.outputs.CommitsSinceVersionSource }}" 
    - name: Download package artifacts
      uses: actions/download-artifact@v4
    - name: Create Release
      uses: ncipollo/release-action@v1
      if: needs.build.outputs.CommitsSinceVersionSource > 0 #Only create a release if there has been a commit/version change
      with:
        #artifacts: Linux_x64/RepoAutomation.Linux_x64.${{ needs.build.outputs.Version }}.zip,MacOS_x64/RepoAutomation.MacOS_x64.${{ needs.versionAndTest.outputs.Version }}.zip,Windows_x64/RepoAutomation.Windows_x64.${{ needs.versionAndTest.outputs.Version }}.zip
        tag: "v${{ needs.build.outputs.Version }}"
        name: "v${{ needs.build.outputs.Version }}"
        token: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
    - name: Publish nuget package to nuget.org
      if: needs.build.outputs.CommitsSinceVersionSource > 0 #Only publish a NuGet package if there has been a commit/version change
      run: dotnet nuget push drop\*.nupkg --api-key "${{ secrets.NuGetToken }}" --source "https://api.nuget.org/v3/index.json"
      shell: pwsh
      
